/**
 * 用标记接口定义类型
 * 标记接口(marker interface) 是没有包含方法声明的接口，
 * 而是指明一个类实现了具有某种属性的接口，例如Serializable
 * 那么就要和标记注解形成对比了！
 * 
 * 如果标记是应用到任何程序元素而不是类或者接口，就必须使用注解
 * 因为只有类和接口可以用来实现或者扩展接口。
 * 如果标记只应用给类和接口，就要问问自己，我要便写一个还是多个只接受有这种标记的方法呢？
 * 如果是这种情况，就应该优先使用标记接口而非注解。这样你就可以用接口作为相关方法的参数类型，
 * 他真正可以为你提供编译时进行类型检查的好处
 * 
 * 总而言之，
 * 如果想要定义一个任何新方法都不会与之关联的类型，标记接口就是最好的选择。
 * 如果想要标记程序元素而非类和接口，考虑到未来可能要给标记添加更多的信息，或者标记
 * 要适合于已经广泛使用了注解类型的框架，那么标记注解就是正确的选择，
 * 
 * 如果想要定义类型，就去使用标记注解！
 * 
 * 但是请注意，同样标记接口也需要相关的处理类来解决，否则没用
 * @author Administrator
 *
 */
package me.czd.effective.java.enumandanno.signinterface;