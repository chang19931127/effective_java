/**
 * 接口优于反射机制
 * 
 * 反射包java.lang.reflect包下，需要熟练掌握API
 * 反射的定义，就是程序运行时期，动态的获取修改类实例。
 * 这个能力很强，但是需要付出代价
 * 1.丧失了编译时类型检查的好处。
 * 2.执行反射所需要的代码非常笨拙和冗长
 * 3.性能较低
 * 一般反射都会去做一些工具，轮子。
 * 
 * 一些复杂的系统需要使用反射，包括类浏览器，对象监视器，代码分析工具，解释性的内嵌系统。
 * RPC系统中使用反射也是很合适的，因为代理就是反射的一种，
 * 
 * 简而言之，反射机制是一种功能强大的机制，对于特定的复杂系统编程任务，他是非常必要的，
 * 但是他也有一些缺点。如果你编写的程序必须要与编译时未知的类一起工作，如有可能，就
 * 应该仅仅使用反射机制来实例化对象，而访问对象则使用编译时一直的某个接口或者超类！
 * 
 * 就是反射来获取对象，通过接口或者超类来调用！
 * 
 * 
 * @author Administrator
 *
 */
package me.czd.effective.java.programdesign.interfacebetterreflect;