/**
 * 谨慎的使用本地方法
 * 由于Java Native Interface 允许java应用程序可以调用本地方法
 * 因为java在虚拟机之上运行的，虚拟机又可以执行一些c或者c++方法来直接操作底层！
 * 
 * 本次方法主要三个用途
 * 1.提供了访问特定于平台的机制，比如访问注册表，文件锁。
 * 2.提供了访问遗留代码库的能力，从而可以访问遗留数据
 * 3.本地方法可以通过本地语言，编写应用程序中注重性能的部分，以提高系统的性能
 * 
 * java.util.prefs可以访问注册表
 * java.awt.SystemTray可以访问桌面系统托盘区
 * 
 * 主要这么多年来，jvm的优化速度提升的很大！因此很重要
 * 
 * 使用本地语言不是很安全，并且本地语言不好移植，而且进入和推出方法又开销
 * 
 * 总而言之，在使用本地方法之前务必三思，极少数情况下会需要使用本地方法来提高性能，
 * 如果你必须要使用本地方法来访问底层的资源，或者遗留代码库，也要尽可能少用本地代码，
 * 并且要全面进行测试，本地一个bug就会破坏整个程序
 * 
 * @author Administrator
 *
 */
package me.czd.effective.java.programdesign.cautiousnativemethod;