/**
 * 考虑用序列化代理代替序列化实例！
 * 
 * 之前是我们说，在某种情况下，想要去序列化不可变类，需要使用writeReplace()方法
 * 传入的是一个实例
 * 那么，这里推荐你去使用代理类来去进行操作
 * 
 * 序列化代理模式相当简单：
 * 首先，为可序列化的类设计一个私有的静态嵌套类，精确地表示外围类的实例的逻辑状态。
 * 这个静态嵌套类，会代理外围类的实例逻辑，哈哈
 * 
 * 总而言之，每当你发现自己必须在一个不能被客户端扩展的类上编写readObject或者writeObject方法
 * 的时候，就应该考虑使用序列化代理模式。要想稳健地将带有重要约束条件的对象序列化时，这种模式可能最容易的方法
 * @author Administrator
 *
 */
package me.czd.effective.java.serializable.proxyinsteadinstant;