/**
 * 
 * 异常
 * 
 * 充分发挥异常的优点，可以提高程序的可读性，可靠性和可维护性。
 * 如果使用不当，他们也会带来负面影响。
 * 异常Error Exception RuntimeException
 * 
 * 模块分类
 * 只针对异常的情况才使用异常
 * 对可恢复的情况使用受检查异常，对编程错误使用运行时异常
 * 避免不可必要地使用受检查的异常
 * 优先使用标准的异常
 * 抛出与抽象相对应的异常
 * 每个方法抛出的异常都要有文档
 * 在细节消息中包含能捕获失败的信息
 * 努力使失败保持原子性
 * 不要忽略异常
 * 
 * @author Administrator
 *
 */
package me.czd.effective.java.expection;