/**
 * 避免过度同步
 * 
 * 同步会影响性能。会造成死锁
 * 
 * 
 * 更好的并发，就要涉及很多内容，分拆锁，分离锁，非阻塞等等
 * 
 * 设计同步的时候注意点：
 * 在一个被同步的区域内部，不要调用设计成要被覆盖的方法，或者由客户端以函数对象的形式提供的方法
 * 因为这些方法对于同步区域的类来说是外来的，无法控制，可能造成死锁，或者数据损坏
 * 使用同步的时候，一定要明白，同步代码块中其他的操作的作用，以及目的，否则会造成不良影响
 * 
 * 简而言之，为了避免死锁和数据破坏，千万不要从同步区域内部调用外来方法！！！
 * 更为一般地讲，要尽量限制同步区域内部的工作量。当你在设计一个不可变类的时候，
 * 要考虑一下他们是否应该自己完成同步操作，在现在这个多核的时代，这比永远不要过度
 * 同步来的更重要。只有当你有足够的理由一定要在内部同步类的时候，才应该这么做，
 * 同时还应该将这个决定清楚的写到文档中！
 * @author Administrator
 *
 */
package me.czd.effective.java.concurrent.avoidexcesssync;