/**
 * 慎用延迟初始化
 * 
 * 对于延迟初始化，最好建议“除非绝对必要，否则就不要这么做”。延迟初始化就像
 * 一把双刃剑。它降低了初始化类或者创建实例的开销，却增加了访问被延迟初始化的域的开销
 * 根据延迟初始化的比例，初始化这些域要多少开销，以及每个域多久被访问一次。优化不好反而降低性能
 * 
 * 简而言之，大多数的域应该正常的进行初始化，而不是延迟初始化，如果为了达到性能目标，
 * 或者为了破坏有害的初始化循环，而必须延迟初始化一个域，就可以使用相应的延迟初始化方法。
 * 对于实例域，就使用双重检查模式，对于静态域，则使用lazy initialization holder class idiom。
 * 对于可以接受重复初始化的实例域，也可以考虑单重检查模式
 * @author Administrator
 *
 */
package me.czd.effective.java.concurrent.cautiouslazyload;