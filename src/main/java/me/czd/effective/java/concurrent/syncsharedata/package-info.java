/**
 * 同步访问共享的可变数据
 * 
 * 同步不仅可以阻止一个线程看到对象处于不一致的状态之中，他还可以
 * 保证进入同步方法或者同步代码块的每个线程，都看到有同一个锁保护的之前所有的修改效果
 * 
 * 简而言之，当多个线程共享可变数据的时候，每个读或者写数据的线程都必须执行同步。
 * 如果没有同步，就无法保证一个线程所做的修改可以被另一个线程获知。未能同步共享可变
 * 数据会造成程序的活性失败，和安全性失败。这样的失败是最难调试的，如果只需要线程之间
 * 的交互通信，而不需要互斥，volatile修饰符就是一种可以接受的同步形式
 * 
 * volatile这个关键字很重要
 * 禁止指令重排序
 * 使得JMM中的缓存失效，直接写入主存，单仅限于原子操作
 * 
 * 
 * 
 * 
 * 避免过度同步那节很重要
 * 
 * @author Administrator
 *
 */
package me.czd.effective.java.concurrent.syncsharedata;