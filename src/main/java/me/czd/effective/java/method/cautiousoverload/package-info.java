/**
 * 慎用重载
 * 还记得重载，和覆盖么
 * 重载是静态的，覆盖是动态的，最简单就是静态左边，动态看右边哈哈！
 * 方法可以重载，那么问题来了，构造函数，普通调用函数，都可以重载，但尽可能不要这么做
 * 最好通过函数名去区分他们
 * 
 * 重载意味着方法名称是相同的，就是参数发生了变化，那么对于使用者来说是不是不太友好
 * 
 * 简而言之，能够重载方法，并不意味着就应该重载方法，一般情况下，对于多个具有相同参数数目的方法来说，
 * 应该尽量避免重载方法。在某些情况下，特别是涉及构造器的时候，要遵循这条建议也许是不可能的，在这种
 * 情况下，至少应该避免这样的情形：同一组参数只需要经过类型转换就可以被传递给不同的重载方法。如果不能
 * 避免这种情形，例如，因为正在改造一个现有的类以实现新的接口，就应该保证：当传递同样的参数时，
 * 所有重载方法的行为必须一致，如果不能做到这一点，程序员就很难有效地使用被重载的方法或者
 * 构造器，他们就不能理解它为什么不能正常的工作
 * 
 * @author Administrator
 *
 */
package me.czd.effective.java.method.cautiousoverload;