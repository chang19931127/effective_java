/**
 * 这一个策略是，用函数对象表示策略！
 * 但我的理解就是函数式编程，首先，有些语言支持，函数指针C++，代理，lambda表达式
 * 那么我们想一下为什么会有这个的存在
 * 针对java面向对象，实际还是面向对象中方法的调用，就是一个对象中的方法调用另外一个对象中的方法
 * 
 * 那么java中就可以考虑，一个接口中，一个方法，然后来保证这种策略默认
 * 这也就是java8中的函数式接口，以及lambda的引入！外加不太成熟的函数式编程
 * 
 * 那么就jdk类中的一个接口来深入以下Comparator中的compare()方法
 * 
 * 首先我们如果仅使用一次，那么匿名类，外加实现这个方法就搞定了，也是lambda所做的
 * 另外一个被重用的方式，就需要我们域私有化，然后可以单例调用，因为这种方法属于无状态的
 * 
 * 也就是，我们有些接口可以设计成策略性的，一个接口对应一个方法，这个接口的实现类具有不同的策略
 * 
 * @author Administrator
 *
 */
package me.czd.effective.java.classandinterface.methodprogram;