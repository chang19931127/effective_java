/**
 * 接口优于抽象类
 * 基本概念：
 * 抽象类允许包含某些方法的实现，但是接口则不允许
 * 为了实现抽象类定义的类型，类必须继承抽象类，但是接口只需要实现
 * 因为java中仅支持单继承
 * 
 * 来一些接口的优势把
 * 现有的类很容易被更新，以实现新的接口，只需要增加实现的方法就好了
 * 接口是定义mixin的理想选择，混合类型，最好的方式，就是一个类具有什么行为
 * 接口允许我们构造非层次结构的类型框架，可以多实现么
 * 
 * 那我们很想多继承怎么般，我们可以创造一个内部私有类，然后通过这个私有类的行为来模拟多继承
 * 
 * 接口下面可以有一个骨架类，就是接口下面类的总体骨架，有些方法实现，有些方法异常
 * 就类似AbstractCollection，AbstractSet，AbstractList，等等
 * 骨架类的目的是为了继承而设计的，仅提供了简单的实现
 * 
 * 接口的特点就是，一旦这个接口被投入使用，在想修改就很麻烦，因为实现类都要修改
 * @author Administrator
 *
 */
package me.czd.effective.java.classandinterface.interfacebetterabsclass;